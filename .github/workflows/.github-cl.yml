name: Flask CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: python -m unittest test_app.py

  SAST:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install Bandit
        run: pip install bandit
      - name: Run Bandit Security Scan
        run: bandit -r . -f html -o bandit-report.html
      - name: Upload Bandit Report
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit-report.html

  DAST:
    runs-on: ubuntu-latest
    needs: SAST
    if: always()  # Included but effectively skipped
    steps:
      - name: Skipping DAST
        run: echo "DAST stage is currently skipped."

  deploy:
    runs-on: ubuntu-latest
    needs: [SAST, DAST]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy Application
        run: |
          # Replace this with your deployment script or AWS commands
          aws s3 sync . s3://your-s3-bucket-name --exclude "*.git/*" --delete
          aws elasticbeanstalk update-environment --application-name YourAppName --environment-name YourEnvName --version-label YourVersionLabel
